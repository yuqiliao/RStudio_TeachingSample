install.packages("xaringan")
install.packages("xaringan")
load("/Users/⁩Yuqi/Desktop⁩\⁨Files\Learning/Online Classes\RStudio\Teaching exam\sample lesson⁩\GIT⁩\RStudio_TeachingSample⁩/ePIRLSCachedRObject.Rdata
getwd()
# read in data
load("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample⁩/ePIRLSCachedRObject.Rdata")
load("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample⁩/ePIRLSCachedRObject.Rdata")
getwd()
# read in cached R Object
load("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/ePIRLSCachedRObject.Rdata")
View(eP16)
# display the list of jurisdictions that are read in
eP16$covs
data
data()
rivers
WWWusage
ChickWeight
View(eP16)
# display cut points
showCutPoints(data = eP16$datalist[[1]])
# read in cached R Object
load("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/ePIRLSCachedRObject.Rdata")
View(eP16)
library(EdSurvey)
getwd()
download_ePIRLS(root = "/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample")
eP16 <- read_ePIRLS(path = "/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/ePIRLS/2016", countries = "*")
knitr::include_graphics('presentationFigures/airLogo.png')
knitr::include_graphics('presentationFigures/pirlsLogo.jpg')
# define a list of packages #note i may need to clean out some of the unused packages later
reqpkg <- c("EdSurvey","ggplot2", "gganimate", "tweenr", "animation", "scales", "tidyr", "dplyr", "grid", "gridExtra", "purrr")
# install and load each package defined above
sapply(reqpkg, function(pkgi) {
if (!pkgi %in% installed.packages()) {
install.packages(pkgi, repos = "http://cran.us.r-project.org")
}
library(pkgi, character.only = TRUE)
})
# display the list of jurisdictions that are read in
eP16 <- read_ePIRLS(path = "/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/ePIRLS/2016", countries = "*")
eP16$covs
options(width = 130)
#combine all lists into one data frame
df <- do.call(rbind.data.frame, AchLevels)
# define function to get discrete benchmark table for a given jurisdiction
GetAchLevel <- function(x, y){
AchLevel <- achievementLevels(achievementVars = c("erea"),
data = x, returnDiscrete = TRUE)
AchLevel <- AchLevel$discrete %>% dplyr::mutate(Country = y)
}
# apply the function to each jurisdiction
AchLevels <- map2(.x = eP16$datalist, .y = eP16$covs$country, .f = GetAchLevel)
# inspect AchLevels (for the first 3 jurisdictions)
AchLevels
# display cut points
showCutPoints(data = eP16$datalist[[1]])
# calculate benchmarks
aLev1 <- achievementLevels(achievementVars = c("erea"),
data = eP16$datalist[[1]],
returnDiscrete = TRUE)
# display discrete benchmark table (for the first jurisdiction)
aLev1$discrete
# define function to get discrete benchmark table for a given jurisdiction
GetAchLevel <- function(x, y){
AchLevel <- achievementLevels(achievementVars = c("erea"),
data = x, returnDiscrete = TRUE)
AchLevel <- AchLevel$discrete %>% dplyr::mutate(Country = y)
}
# apply the function to each jurisdiction
AchLevels <- map2(.x = eP16$datalist, .y = eP16$covs$country, .f = GetAchLevel)
# inspect AchLevels (for the first 3 jurisdictions)
AchLevels
#combine all lists into one data frame
df <- do.call(rbind.data.frame, AchLevels)
# further process the data frame
df <- df %>%
# drop the benchmarking education systems
filter(!Country %in% c("Abu Dhabi, UAE", "Dubai, UAE")) %>%
# select only three columns
select(Percent, Country, Level)
#inspect `df`
df
View(df)
write(df)
saveRDS(df, file = "ePIRLSProcessedDataFrame.rds")
getwd()
getwd()
here()
df1 <- load(paste0(getwd(), "/ePIRLSProcessedDataFrame.rds"))
paste0(getwd(), "/ePIRLSProcessedDataFrame.rds")
load(paste0(getwd(), "/ePIRLSProcessedDataFrame.rds"))
saveRDS(df, file = "ePIRLSProcessedDataFrame.rds")
df1 <- load(paste0(getwd(), "/ePIRLSProcessedDataFrame.rds"))
saveRDS(df, file = "ePIRLSProcessedDataFrame")
saveRDS(df, file = "ePIRLSProcessedDataFrame.RData")
#read in pre-processed data file
df1 <- load(paste0(getwd(), "/ePIRLSProcessedDataFrame.RData"))
saveRDS(df, file = "ePIRLSProcessedDataFrame.rds")
#read in pre-processed data file
df1 <- readRDS(paste0(getwd(), "/ePIRLSProcessedDataFrame.rds"))
#inspect `df`
df
# current levels of `df$Country`
levels(df$Country)
levels(df$Country)
df
df$Country
levels(df$Country)
CountryOrder <- df %>%
filter(Level %in% ("At Advanced International Benchmark")) %>%
arrange(Percent) %>%
pull(Country) #get a vector from a tbl
CountryOrder
df$Country <- factor(df$Country, levels = CountryOrder)
levels(df$Country)
DF
df
levels(df)
levels(df$Country)
saveRDS(df, file = "ePIRLSProcessedDataFrame.rds")
levels(df$Level)
# rename labels of `df$Level`
df$Level <- factor(df$Level, levels = levels(df$Level),
labels = c("Below Low",
"Low",
"Intermediate",
"High",
"Advanced"))
saveRDS(df, file = "ePIRLSProcessedDataFrame.rds")
# Define other plot aesthetics
cols <- c("#982F3A", "#B3B3B3", "#3D3629", "#BA8752", "#143875")
plotCaption <- ("SOURCE: International Association for the Evaluation of Educational Achievement (IEA), \nProgress in International Reading Literacy Study (PIRLS), 2016.")
plotTitle <- c("Percentage of fourth-grade students reaching the ePIRLS \ninternational benchmarks in online informational reading, \nby education system: 2016")
# Create a static plot (base plot)
basePlot <- ggplot(data = df, mapping = aes(x = Country, y = Percent, fill = Level)) +
geom_col(width = 0.7)  +
geom_text(aes(label = round(Percent)), position = position_stack(vjust = 0.5), color = "white") +
scale_fill_manual(values = cols, breaks = rev(levels(df$Level))) +
coord_flip(clip = "off") +
scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100),
labels = c(0, 20, 40, 60, 80, 100),
expand = c(0, 0, 0, 0)) +
labs(x = "", y = "Percent", title = plotTitle, caption = plotCaption) +
theme_minimal()
basePlot
#compressing
gif_compress <- function(ingif, outgif, show=TRUE, extra.opts=""){
command <-  sprintf("gifsicle -O3 %s < %s > %s", extra.opts, ingif, outgif)
system.fun <- if (.Platform$OS.type == "windows") shell else system
if(show) message("Executing: ", strwrap(command, exdent = 2, prefix = "\n"))
system.fun(ifelse(.Platform$OS.type == "windows", sprintf("\"%s\"", shQuote(command)), command))
}
getwd()
gif_compress("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal.gif","/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal_Compressed.gif")
gif_compress("/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal.gif","/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal_Compressed.gif")
gif_compress
path1 <- getwd()
path1
path1 <- "/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal.gif"
path2 <- "/Users/Yuqi/Desktop/Files/Learning:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal_compressed.gif"
gif_compress(path1, path2)
path1 <- "/Users/Yuqi/Desktop/Files/Learning\:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal.gif"
path1 <- "/Users/Yuqi/Desktop/Files/Learning\\:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal.gif"
path1
path2 <- "/Users/Yuqi/Desktop/Files/Learning\\:Online Classes/RStudio/Teaching exam/sample lesson/GIT/RStudio_TeachingSample/presentationFigures/epirlsTweetOriginal_c.gif"
gif_compress(path1, path2)
gif_compress("/Users/Yuqi/epirlsTweetOriginal.gif","/Users/Yuqi/epirlsTweetOriginal_c.gif")
